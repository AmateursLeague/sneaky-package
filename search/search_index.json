{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Sneaky Package A ready-to-deploy Python package designed to stealthily integrate files within a machine, ensuring discreet and seamless file operations without detection.</p>"},{"location":"#getting-started","title":"Getting Started","text":""},{"location":"#what-is-sneaky-package","title":"What is Sneaky Package?","text":"<p>Learn about the purpose of Sneaky Package, its features, and how it can enhance your project. Get a comprehensive overview of what the package offers.</p>"},{"location":"#installation-guide","title":"Installation Guide","text":"<p>Follow this guide to set up Sneaky Package quickly and easily from PyPi. Includes system requirements, package dependencies, and troubleshooting steps for common installation issues.</p>"},{"location":"#usage-guide","title":"Usage Guide","text":"<p>Discover how to effectively use the core features of Sneaky Package with step-by-step examples and explanations. This section includes:   - Basic usage scenarios   - Advanced configuration   - Practical examples for various use cases</p> <p>Start exploring the documentation by using the navigation bar or jumping directly into one of the sections above. Happy coding with Sneaky Package!</p>"},{"location":"CHANGELOG/","title":"Changelog","text":""},{"location":"CHANGELOG/#unreleased","title":"[Unreleased]","text":""},{"location":"CHANGELOG/#v01-2024-02-04","title":"[v0.1] - 2024-02-04","text":""},{"location":"CHANGELOG/#added","title":"Added","text":"<ul> <li>Uploaded testing source data.</li> <li>Implemented discreet source code display.</li> </ul>"},{"location":"CHANGELOG/#fixes","title":"Fixes","text":"<ul> <li>No fixes were required for the initial release.</li> </ul>"},{"location":"CHANGELOG/#pre-release","title":"[Pre-release]","text":""},{"location":"CHANGELOG/#v02-2024-02-04","title":"[v0.2] - 2024-02-04","text":""},{"location":"CHANGELOG/#added_1","title":"Added","text":"<ul> <li>Introduces additional source code to PyPI.</li> </ul>"},{"location":"CHANGELOG/#fixes_1","title":"Fixes","text":"<ul> <li>Enhances ease of implementation.</li> </ul>"},{"location":"CHANGELOG/#changes","title":"Changes","text":"<ul> <li>Renamed import from <code>lib</code> to <code>display</code>.</li> </ul>"},{"location":"CHANGELOG/#stable-release","title":"[Stable-Release]","text":""},{"location":"CHANGELOG/#v071-2024-03-29","title":"[v0.7.1] - 2024-03-29","text":""},{"location":"CHANGELOG/#added_2","title":"Added","text":"<ul> <li>Browser Code</li> <li>All subject code</li> </ul>"},{"location":"CHANGELOG/#fixes_2","title":"Fixes","text":"<ul> <li>Integrated functioning code snippets</li> </ul>"},{"location":"CHANGELOG/#changes_1","title":"Changes","text":"<ul> <li>New package added for testing <code>graph</code>.</li> </ul>"},{"location":"CHANGELOG/#stable-release_1","title":"[Stable-Release]","text":""},{"location":"CHANGELOG/#091-2024-04-08","title":"[0.9.1] - 2024-04-08","text":""},{"location":"CHANGELOG/#added_3","title":"Added","text":"<ul> <li>Clipboard feature (src code will copied into os clipboard)</li> </ul>"},{"location":"CHANGELOG/#fixes_3","title":"Fixes","text":"<ul> <li>Bug Fixes for the clipboard feature</li> </ul>"},{"location":"LICENSE/","title":"License","text":"<p>The project works by highlighting and improving security measures by demonstrating potential vulnerabilities when the system is connected with pip. It is licensed under the GPL 3.0, allowing you to sneakily use and modify it as needed.</p>"},{"location":"about/","title":"SNEAKY PACKAGE \ud83d\udc7e","text":"<p>A ready-to-deploy Python package designed to stealthily integrate files within a machine, ensuring discreet and seamless file operations without detection. This project is nothing more than a lightweight &amp; faster Python package that aims to highlight and improve security by demonstrating potential vulnerabilities in the system when connected with pip.</p>"},{"location":"about/#key-features","title":"\u2728 Key Features \u2728","text":""},{"location":"about/#designed-to-look-conventional","title":"\ud83d\udcbe Designed to Look Conventional","text":"<ul> <li>The package installs like any normal Python package, but its main target is to perform sneaky functions that are unfavorable for users.</li> </ul>"},{"location":"about/#installing-without-getting-noticed","title":"\ud83d\udce5 Installing Without Getting Noticed","text":"<ul> <li>One key feature of the package is that it is designed in such a way that it becomes difficult to detect its installation. The download and installation can be done without getting caught.</li> </ul>"},{"location":"about/#cross-platform-package","title":"\ud83d\udda5\ufe0f Cross-Platform Package","text":"<ul> <li>The package runs across all major operating systems, including Windows, Linux, and macOS.</li> </ul>"},{"location":"about/#how-to-get-started-","title":"\ud83d\udee0\ufe0fHow to Get Started-","text":""},{"location":"about/#installations","title":"\ud83d\udd27 Installations:","text":"<pre><code>pip install matplotlib-visual\n</code></pre> <p>Note: The <code>matplotlib-visual</code> package has been implemented by Project Manager and has details specific to him, you are suggested to follow the steps above and fork the repository and upload a package.</p>"},{"location":"about/#execution","title":"\u23f1\ufe0fExecution:","text":"<ol> <li>Create a Python file and enter any of the code snippets below.</li> <li>Or, open a terminal and run Python interactively: <pre><code>python\n</code></pre></li> </ol>"},{"location":"about/#progress-so-far","title":"\ud83d\udccaProgress so far:","text":"<ul> <li> <p>\ud83d\udccdDisplaying source code in the console output. <pre><code>    from matplotlib_visual.show import display\n    display(\"&lt;filename-without-extension&gt;\")\n</code></pre></p> <p><code>show</code> method displays source code in the console. </p> </li> <li> <p>\ud83d\udccdStealth Copy to Clipboard for a more secure method. <pre><code>    from matplotlib_visual.clip import display\n    display(\"&lt;filename-without-extension&gt;\")\n</code></pre></p> <p><code>clip</code> method copies the source code to the system's clipboard. </p> </li> <li> <p>\ud83d\udccdWriting the source code into the program's root directory. <pre><code>    from matplotlib_visual.write import display\n    display(\"&lt;filename-without-extension&gt;\")\n</code></pre></p> <p><code>write</code> method writes the file in the root directory of execution. </p> </li> <li> <p>\ud83d\udccdWeb Scraping from a cl1p.net clipboard. <pre><code>     from package_name.clp import grab\n     grab('url-name')\n</code></pre></p> <p><code>grab</code> method retrieves the clipboard's text content from the specified URL and displays it in the system console. If no content is found, a message indicating \"nothing found\" is returned. </p> </li> </ul>"},{"location":"about/#how-to-contribute-to-this-project","title":"\ud83d\ude80 How to Contribute to This Project","text":"<p>We welcome all contributors to our project Sneaky-Package. Before contributing we request you to get familiar with the project. The project is beginner friendly and you can find features you would like to improve including bugs, enhancements or documentation.  Here are steps to start contributing: </p> <ol> <li>\ud83c\udf74 Fork the Repository </li> <li>Go to the repository page.</li> <li> <p>Click the Fork button (top right) to create a copy in your GitHub account.</p> </li> <li> <p>\ud83d\udcbb Clone Your Fork </p> </li> <li>Open your terminal and run:      <pre><code>git clone https://github.com/ENTER-YOUR-USERNAME/Sneaky-package.git\n</code></pre></li> <li> <p>You have to enter your Github username in above code. </p> </li> <li> <p>\ud83c\udf3f Create a New Branch </p> </li> <li> <p>Create a new branch for your work to ensure that changes made by other contributors don't overlap with yours:      <pre><code>git switch YOUR-BRANCH-NAME\n</code></pre></p> </li> <li> <p>\ud83d\udee0\ufe0f Make Your Changes</p> </li> <li> <p>Make the required changes in the package, and contact the project manager this-is-yaash for any queries.</p> </li> <li> <p>\u2705 Finalize Your Changes</p> </li> <li> <p>Before you proceed to the next step ensure all changes are made and check them once again before making the final commit.</p> </li> <li> <p>\ud83d\udcac Commit Your Changes </p> </li> <li> <p>Once ready, commit them with a descriptive message:      <pre><code>git add .\ngit commit -m \"Added feature X or Fixed issue Y\"\n</code></pre></p> </li> <li> <p>\ud83d\udce4 Push Your Changes</p> </li> <li> <p>Push your changes to your forked repository:      <pre><code>git push origin YOUR-BRANCH-NAME\n</code></pre></p> </li> <li> <p>\ud83d\udd04 Create a Pull Request (PR) </p> </li> <li>Go back to the original repository here.</li> <li> <p>Click the Compare &amp; pull request button, write a short description of your changes, and submit the PR.</p> </li> <li> <p>\ud83d\udd0e Review Changes</p> </li> <li>The project manager will review your PR, and if approved, your request will be merged.</li> </ol>"},{"location":"about/#note-for-contributors-","title":"\ud83d\udcd1Note for Contributors-","text":"<ul> <li>This package integrates source files into a target machine using the <code>stash/</code> directory.</li> <li>A test file is provided\u2014run it to ensure that the contents of the files inside the stash appear on the target machine.</li> <li>Filenames like <code>clip.py</code>, <code>show.py</code>, and <code>write.py</code> are aliases to avoid detection of sensitive operations.</li> <li>If you find any vulnerabilities, please raise an issue! \u26a0\ufe0f</li> </ul>"},{"location":"about/#technologies-description","title":"Technologies &amp; Description","text":"<ul> <li>This project is developed entirely in Python.</li> <li>The codebase is compact and lightweight, allowing for faster installation and execution.</li> <li>All features are built using Python's built-in modules, making this project an ideal choice for beginners looking to explore package development without external dependencies.</li> </ul> <p>Big thanks to all the contributors! \ud83c\udf89</p>"},{"location":"about/#ending-note","title":"\ud83d\udc8c Ending Note","text":"<p>We thank all the contributors for playing their part in the project, we really appreciate your efforts. We encourage other contributors to explore the package and help us enhance it, your contributions are valuable.</p>"},{"location":"about/#licence","title":"\ud83e\udeaaLicence","text":"<p>The project works by highlighting and improving security measure by demonstrating potential vulnerabilities when the system connected with pip. It is licensed under the GPL 3.0, allowing you to sneakily use and modify it as needed.</p> <p>Happy sneaking! \ud83e\udd2b</p>"},{"location":"contributing/","title":"Contributing Guidelines","text":""},{"location":"contributing/#introduction","title":"Introduction","text":"<p>Thank you for your interest in contributing to Sneaky Package! This project is nothing more than a lightweight &amp; faster Python package that aims to highlight and improve security by demonstrating potential vulnerabilities in the system when connected with pip. Your contributions\u2014whether they be code, documentation, or feedback\u2014help foster a collaborative environment and drive innovation in our project.</p> <p>Please follow the guidelines below to ensure a smooth contribution process.</p>"},{"location":"contributing/#getting-started","title":"Getting Started","text":"<p>To contribute to the Sneaky Package, follow these steps to set up your development environment:</p> <ol> <li> <p>Fork this repository to your GitHub account by clicking the \"Fork\" button in the top right.</p> </li> <li> <p>Clone the Repository:    Open your terminal and run:    <pre><code>git clone https://github.com/YOUR-USERNAME/sneaky-package\ncd sneaky-package\n</code></pre></p> </li> <li> <p>Install Prerequisites:    Ensure you have the following installed:</p> </li> <li>Python 3.x</li> <li> <p>pip (Python package installer)</p> </li> <li> <p>Install the package:    Open your terminal and run:    <pre><code>pip install matplotlib_visual\n</code></pre></p> </li> </ol> <p>Create a file or open Python in the terminal and enter the following code:    <pre><code>from matplotlib_visual.display import featureName  \nfeatureName(\"fileName\", 1234) # password integer\n</code></pre></p> <pre><code>  - `display` - A method that contains features  \n  - `featureName` - Check out `display.py` in the repo and use the required method name (feature).\n</code></pre>"},{"location":"contributing/#understanding-the-codebase","title":"Understanding the Codebase","text":"<p>Before contributing, take time to familiarize yourself with the structure of the project by reading the README file.     - This project is beginner-friendly with most features implemented in minimal lines of code.    - Codebase is compact, lightweight and faster.    - Research thoroughly to understand how to implement stealthy features.    - Review comments and docstrings within the code to grasp how each component works.</p>"},{"location":"contributing/#how-to-contribute","title":"How to Contribute","text":"<p>Follow these steps to make your contributions:</p>"},{"location":"contributing/#step-1-identify-an-issue","title":"Step 1: Identify an Issue","text":"<p>First, check for any existing issues in the repository. If you want to report a new issue, please make sure to follow the Issue Template provided below:</p> <ul> <li>Issue Template:<ul> <li>Issue Title: A concise and descriptive title.</li> <li>Description: Clear and detailed description of the issue or feature request.</li> <li>Steps to Reproduce (if applicable): Detailed steps to reproduce the issue.</li> <li>Expected Behavior: What you expected to happen.</li> <li>Actual Behavior: What actually happened.</li> </ul> </li> </ul> <p>If the issue already exists or you're interested in fixing something, feel free to pick it up.</p>"},{"location":"contributing/#step-2-fork-the-repository","title":"Step 2: Fork the Repository","text":"<p>Click on the \"Fork\" button at the top right of the repository page to create your copy.</p>"},{"location":"contributing/#step-3-create-a-branch","title":"Step 3: Create a Branch","text":"<p>After cloning your forked repository, create a new branch for your changes:    <pre><code>git checkout -b feature/your-feature-name\n</code></pre></p>"},{"location":"contributing/#step-4-make-changes","title":"Step 4: Make Changes","text":"<p>Implement your changes adhering to coding standards and best practices outlined in this project.</p>"},{"location":"contributing/#step-5-testing","title":"Step 5: Testing","text":"<p>Write tests for any new features or bug fixes you implement. Ensure all tests pass before submitting your contribution.</p>"},{"location":"contributing/#submitting-contributions","title":"Submitting Contributions","text":"<p>To submit your changes:</p> <ol> <li> <p>Commit your changes with a clear message:    <pre><code>git commit -m \"Description of changes made\"\n</code></pre></p> </li> <li> <p>Push your branch to your forked repository:    <pre><code>git push origin feature/your-feature-name\n</code></pre></p> </li> <li> <p>Go to the original repository and click \"Compare &amp; Pull Request\". When submitting the PR, please follow this PR Format:</p> </li> <li> <p>Pull Request Template:</p> <ul> <li>Title: Short and descriptive title for your pull request.</li> <li>Description: Detailed description of what changes you made and why.</li> <li>Issue Reference: Mention the issue number this PR addresses (if applicable).</li> </ul> </li> </ol> <p>4. Code Review &amp; Feedback: The project maintainers will review your pull request. You may be asked to make some changes before your PR can be merged. Please respond to the feedback and make the necessary adjustments.</p> <p>If you have any questions or doubts during the review process, feel free to ask.</p>"},{"location":"contributing/#reporting-issues","title":"Reporting Issues","text":"<p>If you encounter bugs or have feature suggestions:</p> <ul> <li>Report them by creating a new issue in the GitHub repository.</li> <li>Provide clear and concise descriptions, including steps to reproduce bugs or use cases for feature requests.</li> </ul>"},{"location":"contributing/#acknowledgments","title":"Acknowledgments","text":"<p>We appreciate all contributions! If you have any doubts or need clarification at any point, please feel free to reach out by creating an issue or asking a question in the PR comments.</p>"},{"location":"contributing/#happy-coding","title":"Happy coding!","text":""},{"location":"installation/","title":"Installation Guide","text":"<p>Welcome to the installation guide for <code>sneaky-package</code>. This document will walk you through the process of setting up and running the package on your system.</p>"},{"location":"installation/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure that your system meets the following requirements:</p> <ul> <li>Python  version 3.6 or above</li> <li>pip Python package installer</li> </ul>"},{"location":"installation/#installation-steps","title":"Installation Steps","text":"<p>Follow these steps to install <code>sneaky-package</code>:</p> <ol> <li>Clone the Repository</li> </ol> <p>Open your terminal and run the following commands:</p> <pre><code>git clone https://github.com/AmateursLeague/sneaky-package \ncd sneaky-package\n</code></pre> <ol> <li>Install the Package</li> </ol> <p>Once you're in the project directory, install the package using pip:</p> <pre><code>pip install .\n</code></pre>"},{"location":"installation/#verifying-the-installation","title":"Verifying the Installation","text":"<p>To ensure that the package has been installed correctly, run the following command:</p> <pre><code>python -c \"import sneaky_package; print('Sneaky Package installed successfully!')\"\n</code></pre> <p>If the installation was successful, you should see the message \"Sneaky Package installed successfully!\" printed to your console.</p>"},{"location":"installation/#additional-steps","title":"Additional Steps","text":"<p>If you encounter any issues during installation, you may need to install additional dependencies. Run the following command to install all required packages:</p> <pre><code>pip install -r requirements.txt\n</code></pre>"},{"location":"installation/#running-the-package","title":"Running the Package","text":""},{"location":"installation/#basic-usage","title":"Basic Usage","text":"<p>To use <code>sneaky-package</code> in your Python scripts:</p> <pre><code>from sneaky_package import main_function\nmain_function()\n</code></pre>"},{"location":"installation/#command-line-interface","title":"Command Line Interface","text":"<p><code>sneaky-package</code> also provides a command-line interface. To see available options, run:</p> <pre><code>sneaky-package --help\n</code></pre>"},{"location":"installation/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter any issues during the installation or usage of <code>sneaky-package</code>, try the following:</p> <ul> <li>Permission Issues: If you face permission-related errors, try running the commands with <code>sudo</code>:</li> </ul> <pre><code>sudo pip install .\n</code></pre> <ul> <li> <p>Debugging: For more detailed information about any errors, check the log files located in the <code>logs/</code> directory of the package.</p> </li> <li> <p>Up-to-date Information: For the most current information and potential known issues, refer to our GitHub README.</p> </li> </ul> <p>If you continue to experience problems, please open an issue on our GitHub repository.</p> <p>Thank you for installing <code>sneaky-package</code>! If you have any questions or need further assistance, please don't hesitate to reach out to our support team.</p>"},{"location":"usage/","title":"Getting Started","text":""},{"location":"usage/#getting-started","title":"Getting Started","text":""},{"location":"usage/#installation","title":"Installation","text":"<p>To install the Sneaky Package, run the following command in your terminal: <pre><code>pip install matplotlib-visual\n</code></pre></p> <p>Note: The <code>matplotlib-visual</code> package has been implemented by Project Manager and has details specific to him, you are suggested to follow the steps above and fork the repository and upload a package.</p>"},{"location":"usage/#basic-usage","title":"Basic Usage","text":"<p>After installation, you can use the Sneaky Package in your Python scripts or interactively in a Python shell. Here's a simple example: <pre><code>from matplotlib_visual.show import display\ndisplay(\"&lt;filename-without-extension&gt;\")\n</code></pre> This will display the source code of the specified file in the console.</p>"},{"location":"usage/#advanced-features","title":"Advanced Features","text":"<p>The Sneaky Package offers more advanced features, such as: - Stealth Copy to Clipboard: Copies the source code to the system's clipboard for a more secure method. <pre><code>from matplotlib_visual.clip import display\ndisplay(\"&lt;filename-without-extension&gt;\")\n</code></pre> - Writing the source code: Writes the file in the root directory of execution. <pre><code>from matplotlib_visual.write import display\ndisplay(\"&lt;filename-without-extension&gt;\")\n</code></pre> - Web Scraping: Retrieves the clipboard's text content from a specified URL and displays it in the system console. <pre><code>from package_name.clp import grab\ngrab('url-name')\n</code></pre></p>"},{"location":"usage/#licence","title":"Licence","text":"<p>The project works by highlighting and improving security measure by demonstrating potential vulnerabilities when the system connected with pip. It is licensed under the GPL 3.0, allowing you to sneakily use and modify it as needed.</p> <p>Happy sneaking! \ud83e\udd2b</p>"}]}